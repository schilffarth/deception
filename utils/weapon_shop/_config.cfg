#textdomain wesnoth-Deception

#define UNIT_TYPES_KALGOR
Kalgor Child,Kalgor 1,Kalgor 2,Kalgor 3,Kalgor Ghost
#enddef

#define UNIT_TYPES_GRUNT
DEC Orcish Grunt,DEC Orcish Warrior,DEC Orcish Warlord,DEC Orcish Overlord
#enddef

#define UNIT_TYPES_BRAWLER
DEC Orcish Brawler,DEC Orcish Brutestalker,DEC Orcish Bloodscourge,DEC Orcish Doombringer
#enddef

#define UNIT_TYPES_ARCHER
DEC Orcish Archer,DEC Orcish Crossbowman,DEC Orcish Slurbow,DEC Orcish Dreadbolt
#enddef

#define UNIT_TYPES_SHAMAN
DEC Orcish Shaman,DEC Orcish Seer,DEC Orcish Sorcerer,Orcish Warlock
#enddef

#define UNIT_TYPES_ASSASSIN
DEC Orcish Assassin,DEC Orcish Slayer,DEC Orcish Nightblade,DEC Orcish Deathbringer
#enddef

#define UNIT_TYPES_TROLL
DEC Troll Whelp,DEC Troll,DEC Troll Warrior,DEC Troll Titan,DEC Troll Rocklobber,DEC Troll Boulderlobber,DEC Troll Stonesplitter,DEC Troll Shaman,DEC Troll Sorcerer,DEC Troll Warlock
#enddef

#define UNIT_TYPES_WOLF_RIDER
Wolf Rider,Goblin Pillager,DEC Goblin Devastator,Goblin Knight,Direwolf Rider
#enddef

#define UNIT_TYPES_WOSE
Wose Sapling,Wose,Elder Wose,Ancient Wose,Wose Shaman
#enddef

#define SHOP SHOPKEEPER_ID CUSTOMER_FILTER CONTENTS
    {VARIABLE finished no}

    [while]
        [variable]
            name=finished
            equals=no
        [/variable]

        [do]
            [store_gold]
                side=$side_number
                variable=side_$side_number|_gold
            [/store_gold]

            [command]
            [/command]

            {CONTENTS}

            [+message]
                [option]
                    message= _ "Done"

                    [command]
                        {VARIABLE finished yes}
                    [/command]
                [/option]
            [/message]
        [/do]
    [/while]
#enddef

#define SHOP_ITEM ID IMAGE NAME DESCRIPTION SLOT COST AMOUNT MAX_PER_UNIT UNIT_TYPES ITEM_EFFECT
[/message]

[+command]
    # Only initialize stock variable, don't overwrite
    [if]
        [variable]
            name=item_{ID}_amount
            equals=""
        [/variable]
        [then]
            {VARIABLE item_{ID}_amount {AMOUNT}}
        [/then]
    [/if]

    # Initialize slot variable on unit with 0
    [if]
        [variable]
            name=shopper.variables.has_{SLOT}
            equals=""
        [/variable]
        [then]
            {VARIABLE shopper.variables.has_{SLOT} 0}
        [/then]
    [/if]

    # Save type conditions in variable
    {VARIABLE unit_types_{ID} {UNIT_TYPES}}

    # What type of option should be rendered for this item:
    # out_of_stock
    # short_on_gold
    # not_suitable
    # slot_limit_reached
    # available
    [if]
        # Out of stock
        [variable]
            name=item_{ID}_amount
            equals=0
        [/variable]
        [then]
            {VARIABLE render_item_option_{ID} "out_of_stock"}
        [/then]

        # Can't afford
        [elseif]
            [variable]
                name=side_$side_number|_gold
                less_than={COST}
            [/variable]
            [then]
                {VARIABLE render_item_option_{ID} "short_on_gold"}
            [/then]
        [/elseif]

        # Item doesn't suit unit type
        [elseif]
            [not]
                [variable]
                    name=unit_types_{ID}
                    contains=$shopper.type
                [/variable]
                [or]
                    [variable]
                        name=unit_types_{ID}
                        equals=""
                    [/variable]
                [/or]
            [/not]
            [then]
                {VARIABLE render_item_option_{ID} "not_suitable"}
            [/then]
        [/elseif]

        # Unit reached slot limit
        [elseif]
            [variable]
                name=shopper.variables.has_{SLOT}
                greater_than_equal_to={MAX_PER_UNIT}
            [/variable]
            [then]
                {VARIABLE render_item_option_{ID} "slot_limit_reached"}
            [/then]
        [/elseif]

        # Available for purchase!
        [else]
            {VARIABLE render_item_option_{ID} "available"}
        [/else]
    [/if]

    [if]
        [variable]
            name=shopper.variables.has_{SLOT}
            greater_than_equal_to={MAX_PER_UNIT}
        [/variable]
        [then]
            {VARIABLE shopkeeper_comment _"You have been greedy enough, friend. Go look somewhere else."}
        [/then]
    [/if]
[/command]

[+message]
    # Available
    [option]
        image={IMAGE}
        label= _ "<b>x$item_{ID}_amount|</b>" # stock
        description= _ "<span color='green'>{NAME}</span> <span size='small'>{SLOT} $shopper.variables.has_{SLOT}/{MAX_PER_UNIT}</span>
<span size='small'>" + {DESCRIPTION} + "</span>
<span size='small'>Cost: <b>{COST}</b> gold</span>"
        [show_if]
            [variable]
                name=render_item_option_{ID}
                equals="available"
            [/variable]
        [/show_if]

        [command]
            [gold]
                amount=-{COST}
                side=$side_number
            [/gold]

            {VARIABLE_OP item_{ID}_amount add -1}

            {VARIABLE_OP shopper.variables.has_{SLOT} add 1}

            [unstore_unit]
                variable=shopper
                find_vacant=no
            [/unstore_unit]
            [store_unit]
                [filter]
                    x=$shopper.x
                    y=$shopper.y
                [/filter]
                kill=no
                variable=shopper
            [/store_unit]

            {ITEM_EFFECT}

            [sound]
                name=gold.ogg
            [/sound]

            {VARIABLE shopkeeper_comment _"Off to battle, are you? May your upgrades serve you well. Till we meet again, warrior."}
        [/command]
    [/option]

    # Out of stock
    [option]
        image={IMAGE}
        label=_ "<b>x$item_{ID}_amount|</b>"
        description=_ "<span color='red'>{NAME}</span> <span size='small'>{SLOT} $shopper.variables.has_{SLOT}/{MAX_PER_UNIT}</span>
<span size='small'>" + {DESCRIPTION} + "</span>
<span size='small'><b>Out of stock!</b> Cost: <b>{COST}</b> gold</span>"
        [show_if]
            [variable]
                name=render_item_option_{ID}
                equals="out_of_stock"
            [/variable]
        [/show_if]
    [/option]

    # Side doesn't have enough gold
    [option]
        image={IMAGE}
        label=_ "<b>x$item_{ID}_amount|</b>"
        description=_ "<span color='red'>{NAME}</span> <span size='small'>{SLOT} $shopper.variables.has_{SLOT}/{MAX_PER_UNIT}</span>
<span size='small'>" + {DESCRIPTION} + "</span>
<span size='small'><b>You are short on coin!</b> Cost: <b>{COST}</b> gold</span>"
        [show_if]
            [variable]
                name=render_item_option_{ID}
                equals="short_on_gold"
            [/variable]
        [/show_if]
    [/option]

    # Unit type doesn't suit this item
    [option]
        image={IMAGE}
        label=_ "<b>x$item_{ID}_amount|</b>"
        description=_ "<span color='red'>{NAME}</span> <span size='small'>{SLOT} $shopper.variables.has_{SLOT}/{MAX_PER_UNIT}</span>
<span size='small'>" + {DESCRIPTION} + "</span>
<span size='small'><b>This item doesn't seem to fit!</b> Cost: <b>{COST}</b> gold</span>"
        [show_if]
            [variable]
                name=render_item_option_{ID}
                equals="not_suitable"
            [/variable]
        [/show_if]
    [/option]

    # Unit has reached the item cap for this slot
    [option]
        image={IMAGE}
        label=_ "<b>x$item_{ID}_amount|</b>"
        description=_ "<span color='red'>{NAME}</span> <span size='small'><b>{SLOT} <span color='red'>$shopper.variables.has_{SLOT}/{MAX_PER_UNIT}</span></b></span>
<span size='small'>" + {DESCRIPTION} + "</span>
<span size='small'><b>This unit cannot carry any more {SLOT}!</b> Cost: <b>{COST}</b> gold</span>"
        [show_if]
            [variable]
                name=render_item_option_{ID}
                equals="slot_limit_reached"
            [/variable]
        [/show_if]
    [/option]
#enddef
